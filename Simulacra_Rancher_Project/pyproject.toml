[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "simulacra-rancher"
version = "2.0.0"
description = "A Discord bot game featuring AI-driven Simulacra with advanced memory systems"
authors = [
    {name = "Travis Miner", email = "travis@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "discord.py>=2.5.0",
    "requests>=2.32.0",
    "aiohttp>=3.12.0",
    "websocket-client>=1.8.0",
    "openai>=1.84.0",
    "ollama>=0.5.0",
    "lmstudio>=1.3.0",
    "python-dotenv>=1.1.0",
    "PyYAML>=6.0.0",
    "schedule>=1.2.0",
    "rich>=14.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.0",
    "pytest-timeout>=2.4.0",
    "black>=25.1.0",
    "flake8>=7.3.0",
    "pylint>=3.3.0",
    "mypy>=1.15.0",
    "coverage>=7.8.0",
    "isort>=6.0.0",
    "pre-commit>=4.2.0",
]
ai = [
    "transformers>=4.51.0",
    "torch>=2.7.0",
    "tokenizers>=0.21.0",
    "tiktoken>=0.9.0",
    "litellm>=1.72.0",
]
game = [
    "pygame>=2.6.0",
    "arcade>=3.2.0",
    "pymunk>=6.9.0",
]
web = [
    "fastapi>=0.116.0",
    "uvicorn>=0.35.0",
    "flask>=2.3.0",
]
data = [
    "pandas>=2.3.0",
    "numpy>=2.2.0",
    "matplotlib>=3.10.0",
    "plotly>=6.2.0",
    "seaborn>=0.13.0",
]
docs = [
    "sphinx>=8.2.0",
    "sphinx-rtd-theme>=3.0.0",
]
monitoring = [
    "sentry-sdk>=2.32.0",
    "python-json-logger>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/simulacra-rancher"
Documentation = "https://simulacra-rancher.readthedocs.io"
Repository = "https://github.com/yourusername/simulacra-rancher.git"
Issues = "https://github.com/yourusername/simulacra-rancher/issues"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | simulation
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core", "modules"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "discord.*",
    "aiohttp.*",
    "requests.*",
    "openai.*",
    "ollama.*",
    "lmstudio.*",
    "transformers.*",
    "torch.*",
    "numpy.*",
    "pandas.*",
    "matplotlib.*",
    "plotly.*",
    "pygame.*",
    "arcade.*",
    "pymunk.*",
    "fastapi.*",
    "flask.*",
    "uvicorn.*",
    "pytest.*",
    "black.*",
    "flake8.*",
    "pylint.*",
    "sphinx.*",
    "sentry_sdk.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "test_*.py",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["core", "modules"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/simulation/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
    "W0621",  # redefined-outer-name
    "W0622",  # redefined-builtin
    "W0703",  # broad-except
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 10
max-locals = 20
max-returns = 10
max-statements = 50
max-branches = 15
max-parents = 7
max-attributes = 10
min-public-methods = 0
max-public-methods = 20

[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes" 